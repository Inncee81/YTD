<html>
<head>
<title>KOL Help: TStrList object (main frame)</title>
<base target="_top">
</head>

<body bgcolor="#FFFFEF" text="#000000" link="#008080" vlink="#008000" alink="#808000">
<p><font face="Courier" color="#800080"><b>TStrList( unit <a href=kol_pas.htm>KOL.pas</a> )
 <font face="Wingdings">ï</font> <a href=tobj.htm>TObj</a>
 <font face="Wingdings">ï</font> <a href=_tobj.htm>_TObj</a>
</b></font></p>
<p><b>
TStrList = object( <a href=tobj.htm target="_top">TObj</a> )
</b></p>
Easy string list implementation (non-visual, just to store
string data). It is well improved and has very high performance
allowing to work fast with huge text files (more then megabyte
of text data).
Please note that #0 charaster if stored in string lines, will cut it
preventing reading the rest of a line. Be careful, if your data
contain such characters.
<h3 align="center"><font color="#FF8080">TStrList properties</font></h3>
<a name="values"></a>
<p>
<font face="Courier" color="#800080"><b>property</b> <font color="#808000"><b>Values</b></font>[ <b>const</b> AName: Ansistring ]: Ansistring;</font>
<br>
by Dod. Returns right side of a line starting like Name=...
</p>
<a name="count"></a>
<p>
<font face="Courier" color="#800080"><b>property</b> <font color="#808000"><b>Count</b></font>: <b>integer</b>;</font>
&nbsp;&nbsp;&nbsp;<font face="Webdings" size=7>&#209;</font>&nbsp;&nbsp;&nbsp;
<br>
Number of strings in a string list.
</p>
<a name="items"></a>
<p>
<font face="Courier" color="#800080"><b>property</b> <font color="#808000"><b>Items</b></font>[ Idx: <b>integer</b> ]: Ansistring; <b>default</b>;</font>
<br>
Strings array items. If item does not exist, empty string is returned.
But for assign to property, string with given index *must* exist.
</p>
<a name="itemptrs"></a>
<p>
<font face="Courier" color="#800080"><b>property</b> <font color="#808000"><b>ItemPtrs</b></font>[ Idx: <b>Integer</b> ]: PAnsiChar;</font>
&nbsp;&nbsp;&nbsp;<font face="Webdings" size=7>&#209;</font>&nbsp;&nbsp;&nbsp;
<br>
Fast access to item strings as PChars.
</p>
<a name="text"></a>
<p>
<font face="Courier" color="#800080"><b>property</b> <font color="#808000"><b>Text</b></font>: Ansistring;</font>
<br>
Content of string list as a single string (where strings are separated
by characters $0D,$0A).
</p>
<h4 align="center"><font color="black">Properties, inherited from <a href="tobj.htm" target="_top">TObj</a></font></h4>
<h3 align="center"><font color="#FF8080">TStrList methods</font></h3>
<a name="indexofname"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>IndexOfName</b></font>( AName: Ansistring ): <b>Integer</b>;</font>
<br>
by Dod. Returns index of line starting like Name=...
</p>
<a name="add"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>Add</b></font>( <b>const</b> S: Ansistring ): <b>integer</b>;</font>
<br>
Adds a string to list.
</p>
<a name="addstrings"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>AddStrings</b></font>( Strings: PStrList );</font>
<br>
Merges string list with given one. Very fast - more preferrable to
use than any loop with calling <a href=#add target="main">Add</a> method.
</p>
<a name="assign"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>Assign</b></font>( Strings: PStrList );</font>
<br>
Fills string list with strings from other one. The same as <a href=#addstrings target="main">AddStrings</a>,
but <a href=#clear target="main">Clear</a> is called first.
</p>
<a name="clear"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>Clear</b></font>;</font>
<br>
Makes string list empty.
</p>
<a name="delete"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>Delete</b></font>( Idx: <b>integer</b> );</font>
<br>
Deletes string with given index (it *must* exist).
</p>
<a name="deletelast"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>DeleteLast</b></font>;</font>
<br>
Deletes the last string (it *must* exist).
</p>
<a name="indexof"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>IndexOf</b></font>( <b>const</b> S: AnsiString ): <b>integer</b>;</font>
<br>
Returns index of first string, equal to given one.
</p>
<a name="indexof_nocase"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>IndexOf_NoCase</b></font>( <b>const</b> S: Ansistring ): <b>integer</b>;</font>
<br>
Returns index of first string, equal to given one (while comparing it
without case sensitivity).
</p>
<a name="indexofstrl_nocase"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>IndexOfStrL_NoCase</b></font>( Str: PAnsiChar; L: <b>Integer</b> ): <b>integer</b>;</font>
<br>
Returns index of first string, equal to given one (while comparing it
without case sensitivity).
</p>
<a name="find"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>Find</b></font>( <b>const</b> S: AnsiString; <b>var</b> Index: <b>Integer</b> ): <b>Boolean</b>;</font>
<br>
Returns Index of the string, equal or greater to given pattern, but
works only for sorted TStrList object. Returns TRUE if exact string found,
otherwise nearest (greater then a pattern) string index is returned,
and the result is FALSE. And in such _case Index is returned negated
when the S string is less then the string found.
</p>
<a name="findfirst"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>FindFirst</b></font>( <b>const</b> S: AnsiString; <b>var</b> Index: <b>Integer</b> ): <b>Boolean</b>;</font>
<br>
Like above but always returns Index of the first string, equal or greater
to given pattern. Also works only for sorted TStrList object. Returns TRUE
if exact string found, otherwise nearest (greater then a pattern) string
index is returned, and the result is FALSE.
</p>
<a name="insert"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>Insert</b></font>( Idx: <b>integer</b>; <b>const</b> S: Ansistring );</font>
<br>
Inserts string before one with given index.
</p>
<a name="move"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>Move</b></font>( CurIndex, NewIndex: <b>integer</b> );</font>
<br>
Moves string to another location.
</p>
<a name="settext"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>SetText</b></font>( <b>const</b> S: Ansistring; Append2List: <b>Boolean</b> );</font>
<br>
Allows to set strings of string list from given string (in which
strings are separated by $0D,$0A or $0D characters). <a href=#text target="main">Text</a> must not
contain #0 characters. Works very fast. This method is used in
all others, working with text arrays (<a href=#loadfromfile target="main">LoadFromFile</a>, <a href=#mergefromfile target="main">MergeFromFile</a>,
<a href=#assign target="main">Assign</a>, <a href=#addstrings target="main">AddStrings</a>).
</p>
<a name="setunixtext"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>SetUnixText</b></font>( <b>const</b> S: AnsiString; Append2List: <b>Boolean</b> );</font>
<br>
Allows to assign UNIX-style text (with #10 as string separator).
</p>
<a name="last"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>Last</b></font>: AnsiString;</font>
<br>
Last item (or '', if string list is empty).
</p>
<a name="swap"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>Swap</b></font>( Idx1, Idx2: <b>Integer</b> );</font>
<br>
Swaps to strings with given indeces.
</p>
<a name="sort"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>Sort</b></font>( CaseSensitive: <b>Boolean</b> );</font>
<br>
Call it to sort string list.
</p>
<a name="ansisort"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>AnsiSort</b></font>( CaseSensitive: <b>Boolean</b> );</font>
<br>
Call it to sort ANSI string list.
</p>
<a name="join"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>Join</b></font>( <b>const</b> sep: AnsiString ): AnsiString;</font>
<br>
by Sergey Shishmintzev.
</p>
<a name="loadfromfile"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>LoadFromFile</b></font>( <b>const</b> FileName: KOLString ): <b>Boolean</b>;</font>
<br>
Loads string list from a file. (If file does not exist, nothing
happens). Very fast even for huge text files.
</p>
<a name="loadfromstream"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>LoadFromStream</b></font>( Stream: PStream; Append2List: <b>Boolean</b> );</font>
<br>
Loads string list from a stream (from current position to the end of
a stream). Very fast even for huge text.
</p>
<a name="mergefromfile"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>MergeFromFile</b></font>( <b>const</b> FileName: KOLString );</font>
<br>
Merges string list with strings in a file. Fast.
</p>
<a name="savetofile"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>SaveToFile</b></font>( <b>const</b> FileName: KOLString ): <b>Boolean</b>;</font>
<br>
Stores string list to a file.
</p>
<a name="savetostream"></a>
<p>
<font face="Courier" color="#800080"><b>procedure</b> <font color="#808000"><b>SaveToStream</b></font>( Stream: PStream );</font>
<br>
Saves string list to a stream (from current position).
</p>
<a name="appendtofile"></a>
<p>
<font face="Courier" color="#800080"><b>function</b> <font color="#808000"><b>AppendToFile</b></font>( <b>const</b> FileName: KOLString ): <b>Boolean</b>;</font>
<br>
Appends strings of string list to the end of a file.
</p>
<h4 align="center"><font color="black">Methods, inherited from <a href="tobj.htm" target="_top">TObj</a></font></h4>
<h3 align="center"><font color="#FF8080">TStrList events</font></h3>
<h4 align="center"><font color="black">Events, inherited from <a href="tobj.htm" target="_top">TObj</a></font></h4>
<h3 align="center"><font color="#FF8080">TStrList fields</font></h3>
<h4 align="center"><font color="black">Fields, inherited from <a href="tobj.htm" target="_top">TObj</a></font></h4>
<hr>
<p align="center">[&nbsp;<a href=index.htm>Index</a>&nbsp;]</p>
<p align="center"><font face="Comic Sans MS"><small>This help is generated 14-Jun-2010 by KOL Help generator, (C) 2000-2001 by Vladimir Kladov<br>Modified (C) 2003 by Alexander Bartov</small></font></p>
</body>
</html>
